# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke

name: Build and deploy to production server

on:
  push:
    branches:
        - main 
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Login to Docker HUB
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_SECRET }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "sigmundgranaas/webrtc" \
          .
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "sigmundgranaas/stun" 
    # Deploy the stun server to the CD server
    - name: Copy files
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
          SSH_PRIVATE_KEY: ${{ secrets.NTNU_SERVER_PRIVATE_KEY }}
          ARGS: "--delete"
          SOURCE: "."
          REMOTE_HOST: ${{ secrets.DOMAIN }}
          REMOTE_USER: ${{ secrets.NTNU_SERVER_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          EXCLUDE: "/target/, /src/"
    
    - name: Run the STUN server
      uses: fifsky/ssh-action@master
      with:
        command: |
          cd STUN
          docker-compose down
          ADDRESS=${{ secrets.NTNU_SEVER_LOCAL_IP }} PORT=${{ secrets.STUN_PORT }} docker-compose up -d
        host: ${{ secrets.DOMAIN }}
        user: ${{ secrets.NTNU_SERVER_USER }}
        key: ${{ secrets.NTNU_SERVER_PRIVATE_KEY }}
        args: "-tt"
